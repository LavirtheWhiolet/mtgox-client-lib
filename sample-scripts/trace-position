# This script traces position opened with "open-position" script until
# interrupt.

require 'yaml'
require 'facets'

class ::Numeric
  # Price to points.
  def to_pt
    self * 1e4
  end
end

# Parse args.
open_position_file = arg[0] or raise %(File with saved opened position is not specified)
raise %("#{open_position_file}" does not exist) unless File.file? open_position_file
# Read and parse the position.
position = YAML.load_file(open_position_file)
$coins_amount = Rational(position["amount"])
eval <<-RUBY
  def profit_per_item
    #{position["profit per item"]}
  end
  def price
    ticker.#{position["price to trace"]}
  end
  def price_to_trace_s
    "#{case position["price to trace"]
      when "buy" then "Buy"
      when "sell" then "Sell"
      end
    }"
  end
  def profit
    profit_per_item * $coins_amount
  end
RUBY
# Trace!
old_price = price
first_time = true
loop do
  if price != old_price or first_time
    puts "#{price_to_trace_s}: #{price.to_f} (#{(price - old_price).to_pt.to_f.to_s_with_plus} pt.)  P/L: #{currency} #{profit.to_f.round_to(0.01)} (#{profit_per_item.to_pt.to_f.round_to(0.1)} pt.)"
  end
  old_price = price
  first_time = false
  wait_ticker_change
end
